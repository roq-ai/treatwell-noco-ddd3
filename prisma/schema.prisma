generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model appointment {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  date_time   DateTime @db.Timestamp(6)
  customer_id String   @db.Uuid
  stylist_id  String   @db.Uuid
  salon_id    String   @db.Uuid
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  customer    customer @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  salon       salon    @relation(fields: [salon_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user        user     @relation(fields: [stylist_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model customer {
  id          String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  first_name  String        @db.VarChar(255)
  last_name   String        @db.VarChar(255)
  phone       String        @db.VarChar(255)
  email       String?       @unique @db.VarChar(255)
  salon_id    String        @db.Uuid
  created_at  DateTime      @default(now()) @db.Timestamp(6)
  updated_at  DateTime      @default(now()) @db.Timestamp(6)
  appointment appointment[]
  salon       salon         @relation(fields: [salon_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model salon {
  id          String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?       @db.VarChar(255)
  image       String?       @db.VarChar(255)
  name        String        @db.VarChar(255)
  created_at  DateTime      @default(now()) @db.Timestamp(6)
  updated_at  DateTime      @default(now()) @db.Timestamp(6)
  user_id     String        @db.Uuid
  tenant_id   String        @db.VarChar(255)
  appointment appointment[]
  customer    customer[]
  user        user          @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String        @unique @db.VarChar(255)
  firstName   String?       @db.VarChar(255)
  lastName    String?       @db.VarChar(255)
  roq_user_id String        @db.VarChar(255)
  tenant_id   String        @db.VarChar(255)
  created_at  DateTime      @default(now()) @db.Timestamp(6)
  updated_at  DateTime      @default(now()) @db.Timestamp(6)
  appointment appointment[]
  salon       salon[]
}
